import groovy.json.JsonSlurper

apply plugin: 'com.android.application'

android {
    def agpVersion = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION
    compileSdk defaultTargetSdkVersion

    defaultConfig {
        applicationId "ai.picovoice.porcupine.demo"
        minSdkVersion 21
        targetSdkVersion defaultTargetSdkVersion
        versionCode 8
        versionName "3.0.0"
    }
    buildFeatures {
        buildConfig true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    def testDataFile = file('../../../../resources/.test/test_data.json')
    def parsedJson = new JsonSlurper().parseText(testDataFile.text)
    def languages = []
    parsedJson.tests.singleKeyword.each { a ->
        languages.add(a.language)
    }

    flavorDimensions "language"
    productFlavors {
        if (agpVersion.tokenize('.')[0].toInteger() >= 7) {
            en {
                getIsDefault().set(true)
            }
        }

        languages.each { language ->
            "$language" {
                applicationIdSuffix ".$language"

            }
        }

        all { flavor ->
            delete fileTree("$projectDir/src/main/assets") {
                exclude '**/.gitkeep'
            }
            task("${flavor.name}CopyParams", type: Copy) {
                if (flavor.name != 'en') {
                    from("$projectDir/../../../../lib/common/")
                    include("porcupine_params_${flavor.name}.pv")
                    into("$projectDir/src/${flavor.name}/assets/models")
                }
            }
            task("${flavor.name}CopyKeywords", type: Copy) {
                description = "Copy ${flavor.name} resources"
                if (flavor.name != 'en') {
                    from("$projectDir/../../../../resources/keyword_files_${flavor.name}/android")
                    include('*.ppn')
                    into("$projectDir/src/${flavor.name}/assets/keywords")
                    rename { String fileName ->
                        fileName.replace("_android", "").replace(" ", "_")
                    }
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    if (agpVersion.tokenize('.')[0].toInteger() >= 7) {
        namespace 'ai.picovoice.porcupine.demo'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'ai.picovoice:porcupine-android:3.0.1'
}

afterEvaluate {
    android.productFlavors.all {
        flavor ->
            tasks."merge${flavor.name.capitalize()}DebugAssets".dependsOn "${flavor.name}CopyParams"
            tasks."merge${flavor.name.capitalize()}ReleaseAssets".dependsOn "${flavor.name}CopyParams"
            tasks."merge${flavor.name.capitalize()}DebugAssets".dependsOn "${flavor.name}CopyKeywords"
            tasks."merge${flavor.name.capitalize()}ReleaseAssets".dependsOn "${flavor.name}CopyKeywords"
    }
}
